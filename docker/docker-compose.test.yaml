version: "3.8"

services:
  mongo:
    container_name: "mongodb"
    image: mongo:6
    restart: on-failure
    ports:
      - "27017:27017"
    networks:
      - test-net
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpwd
      - MONGO_INITDB_DATABASE=adminpwd

  cdn:
    container_name: "cdn"
    build:
      context: ${APP_SRC}
      dockerfile: ${APP_SRC}/docker/Dockerfile
    restart: on-failure
    volumes:
      - ${APP_SRC}/logs:/data/logs
      - ${APP_SRC}/config.yaml:/app/config.yaml
    depends_on:
      - mongo
    environment:
      - MONGO_URI
      - MONGO_DB_NAME
      - APP_PORT
      - DOMAIN
      - APP_HOST
    ports:
      - "9001:9001"
    networks:
      - test-net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ${APP_SRC}/prometheus/prometheus_test.yml:/etc/prometheus/prometheus.yml
    networks:
      - test-net

  grafana:
    image: grafana/grafana
    user: root
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ${APP_SRC}/grafana/provisioning:/etc/grafana/provisioning
      - ${APP_SRC}/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - test-net

networks:
  test-net:
    driver: bridge
